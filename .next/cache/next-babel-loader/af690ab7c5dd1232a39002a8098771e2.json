{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GLOBAL } from \"../defines\";\nconst initialState = {\n  mode: \"light\",\n  category: \"clothing\",\n  keyword: \"\"\n};\n\nconst globalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GLOBAL.SET_MODE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        m: action.lang\n      });\n\n    case GLOBAL.SET_CATEGORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        category: action.category\n      });\n\n    case GLOBAL.SET_SEARCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        keyword: action.keyword\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;","map":{"version":3,"sources":["E:/stora-next/stora/src/redux/reducers/globalReducer.js"],"names":["GLOBAL","initialState","mode","category","keyword","globalReducer","state","action","type","SET_MODE","m","lang","SET_CATEGORY","SET_SEARCH"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,YAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,OADa;AAEnBC,EAAAA,QAAQ,EAAE,UAFS;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,MAAM,CAACS,QAAZ;AACE,6CACKH,KADL;AAEEI,QAAAA,CAAC,EAAEH,MAAM,CAACI;AAFZ;;AAIF,SAAKX,MAAM,CAACY,YAAZ;AACE,6CACKN,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFnB;;AAIF,SAAKH,MAAM,CAACa,UAAZ;AACE,6CACKP,KADL;AAEEF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAFlB;;AAIF;AACE,aAAOE,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import { GLOBAL } from \"../defines\";\r\n\r\nconst initialState = {\r\n  mode: \"light\",\r\n  category: \"clothing\",\r\n  keyword: \"\",\r\n};\r\n\r\nconst globalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GLOBAL.SET_MODE:\r\n      return {\r\n        ...state,\r\n        m: action.lang,\r\n      };\r\n    case GLOBAL.SET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: action.category,\r\n      };\r\n    case GLOBAL.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        keyword: action.keyword,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default globalReducer;\r\n"]},"metadata":{},"sourceType":"module"}