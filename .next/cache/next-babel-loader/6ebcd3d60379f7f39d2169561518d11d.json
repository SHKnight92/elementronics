{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Select, Button, AutoComplete } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { SHOP } from \"../../../common/defines\";\nimport { getProductsByCategory } from \"../../../common/shopUtils\";\nimport { setGlobalCategory, setGlobalSearch } from \"../../../redux/actions/globalActions\";\nimport { setSubCategory } from \"../../../redux/actions/shopActions\";\nimport useDebounce from \"../../../common/useDebound\";\n\nfunction SearchBarMobile({\n  fillData,\n  placeholder\n}) {\n  const {\n    Option\n  } = Select;\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: showDropdownOptions,\n    1: setShowDropdownOptions\n  } = useState(false);\n  const globalState = useSelector(state => state.globalReducer);\n  const deboundValue = useDebounce(search, 300);\n  useEffect(() => {\n    dispatch(setGlobalSearch(deboundValue));\n  }, [deboundValue]);\n\n  const renderAutoFillItem = () => {\n    let product = getProductsByCategory(fillData, globalState.category);\n    return product.map(item => ({\n      value: item.name\n    }));\n  };\n\n  const onSelectCateory = value => {\n    dispatch(setGlobalCategory(value));\n    dispatch(setSubCategory(\"\"));\n  };\n\n  const openDropdownOption = value => {\n    setShowDropdownOptions(true);\n    setSearch(value);\n  };\n\n  const closeDropdownOption = () => {\n    setShowDropdownOptions(false);\n  };\n\n  const onSelectOption = (value, option) => {\n    setSearch(value);\n    closeDropdownOption();\n  };\n\n  const onSearch = () => {\n    if (!search || search === \"\") {\n      router.push(\"/\");\n    } else {\n      router.push({\n        pathname: \"/\",\n        query: {\n          q: search\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"menu-search\"\n  }, __jsx(\"div\", {\n    className: \"menu-search__form\"\n  }, __jsx(Select, {\n    className: \"menu-search__form-select\",\n    defaultValue: globalState.category,\n    style: {\n      width: 120\n    },\n    onChange: onSelectCateory,\n    value: globalState.category\n  }, SHOP.category.map((item, index) => __jsx(Option, {\n    key: index,\n    value: item.name\n  }, item.name))), __jsx(\"div\", {\n    className: \"menu-search__form-input\"\n  }, __jsx(AutoComplete, {\n    allowClear: true,\n    backfill: true,\n    open: showDropdownOptions,\n    onSearch: openDropdownOption,\n    onBlur: closeDropdownOption,\n    onSelect: onSelectOption,\n    options: renderAutoFillItem(),\n    placeholder: placeholder,\n    filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n  }), __jsx(Button, {\n    onClick: onSearch\n  }, __jsx(\"i\", {\n    className: \"icon_search\"\n  })))));\n}\n\nexport default React.memo(SearchBarMobile);","map":null,"metadata":{},"sourceType":"module"}