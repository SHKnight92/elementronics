{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { Rate, Button, Tooltip, Skeleton, message, Modal, Spin } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { formatCurrency } from \"../../common/utils\";\nimport { checkProductInWishlist, checkAvaiableQuantityToAdd } from \"../../common/shopUtils\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist, removeFromWishlist } from \"../../redux/actions/wishlistActions\";\nimport ShopQuickView from \"../shop/ShopQuickView\";\n\nfunction Product({\n  data,\n  productStyle\n}) {\n  const dispatch = useDispatch();\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: imageLoading,\n    1: setImageLoading\n  } = useState(true);\n  const globalState = useSelector(state => state.globalReducer);\n  const cartState = useSelector(state => state.cartReducer);\n  const wishlistState = useSelector(state => state.wishlistReducer);\n  const productInWishlist = checkProductInWishlist(wishlistState, data.id);\n  const avaiableQuantity = checkAvaiableQuantityToAdd(cartState, data);\n  const {\n    currency,\n    locales\n  } = globalState.currency;\n  useEffect(() => {\n    setImageLoading(true);\n  }, [globalState.category]);\n\n  const renderProductType = () => {\n    if (data.discount && !data.isNew) {\n      return __jsx(\"p\", {\n        className: \"product-type -sale\"\n      }, \"Sale\");\n    } else if (data.isNew && !data.discount) {\n      return __jsx(\"p\", {\n        className: \"product-type -new\"\n      }, \"New\");\n    } else if (data.isNew && data.discount) {\n      return __jsx(\"p\", {\n        className: \"product-type -new\"\n      }, \"New\");\n    } else {\n      return null;\n    }\n  };\n\n  console.log(avaiableQuantity);\n\n  const onAddToCart = data => {\n    if (avaiableQuantity === 0) {\n      return;\n    }\n\n    dispatch(addToCart(data, 1, \"none\", \"none\"));\n    message.success(\"Product added to cart successfully\");\n  };\n\n  const onAddToWishlist = data => {\n    if (productInWishlist) {\n      dispatch(removeFromWishlist(data.id));\n      return message.error(\"Product removed from wishlist\");\n    } else {\n      dispatch(addToWishlist(data));\n      return message.success(\"Product added to wishlist successfully\");\n    }\n  };\n\n  const renderStyleClass = () => {\n    const avaialeStyles = [\"one\", \"two\", \"three\"];\n\n    if (avaialeStyles.includes(productStyle)) {\n      if (!productStyle || productStyle === \"one\") {\n        return \"-style-one\";\n      } else {\n        return \"-style-\" + productStyle;\n      }\n    } else {\n      return \"-style-one\";\n    }\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = e => {\n    setVisible(false);\n  };\n\n  const handleImageLoaded = () => {\n    setImageLoading(false);\n  };\n\n  return data ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: `product ${renderStyleClass()}`\n  }, __jsx(\"div\", {\n    className: \"product-image\"\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + `/product/[slug]`,\n    as: process.env.PUBLIC_URL + `/product/${data.slug}`\n  }, __jsx(\"a\", {\n    className: classNames({\n      loading: imageLoading\n    })\n  }, data.thumbImage && data.thumbImage.map((item, index) => __jsx(\"img\", {\n    onLoad: handleImageLoaded,\n    key: index,\n    src: item,\n    alt: \"Product image\"\n  })))), imageLoading && __jsx(\"div\", {\n    className: \"product-image-loading\"\n  }, __jsx(Spin, {\n    size: \"large\"\n  })), renderProductType(), productStyle === \"two\" ? __jsx(\"div\", {\n    className: \"product-button-group\"\n  }, __jsx(Tooltip, {\n    title: \"Quick view\"\n  }, __jsx(Button, {\n    onClick: showModal,\n    type: \"text\"\n  }, __jsx(\"i\", {\n    className: \"icon_search\"\n  }))), __jsx(Tooltip, {\n    title: productInWishlist ? \"Remove from wishlist\" : \"Add to wishlist\"\n  }, __jsx(Button, {\n    className: `product-atw ${classNames({\n      active: productInWishlist\n    })}`,\n    type: \"text\",\n    onClick: () => onAddToWishlist(data)\n  }, __jsx(\"i\", {\n    className: \"icon_heart_alt\"\n  }))), __jsx(Tooltip, {\n    title: \"Add to cart\"\n  }, __jsx(Button, {\n    disabled: avaiableQuantity === 0,\n    type: \"text\",\n    onClick: () => onAddToCart(data)\n  }, __jsx(\"i\", {\n    className: \"icon_bag_alt\"\n  })))) : null, !productStyle || productStyle === \"one\" ? __jsx(React.Fragment, null, __jsx(Tooltip, {\n    placement: \"left\",\n    title: productInWishlist ? \"Remove from wishlist\" : \"Add to wishlist\"\n  }, __jsx(Button, {\n    className: `product-atw ${classNames({\n      active: productInWishlist\n    })}`,\n    type: \"text\",\n    shape: \"circle\",\n    onClick: () => onAddToWishlist(data)\n  }, __jsx(\"i\", {\n    className: \"icon_heart_alt\"\n  }))), __jsx(Button, {\n    onClick: showModal,\n    className: \"product-qv\"\n  }, \"Quick view\")) : null), __jsx(\"div\", {\n    className: \"product-content\"\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + `/product/[slug]`,\n    as: process.env.PUBLIC_URL + `/product/${data.slug}`\n  }, __jsx(\"a\", {\n    className: \"product-name\"\n  }, data.name)), __jsx(\"div\", {\n    className: \"product-rate\"\n  }, __jsx(Rate, {\n    defaultValue: data.rate,\n    disabled: true\n  }), __jsx(\"span\", {\n    className: \"product-rate-quantity\"\n  }, \"(06)\")), __jsx(\"div\", {\n    className: \"product-content__footer\"\n  }, __jsx(\"div\", {\n    className: \"product-content__footer-price\"\n  }, __jsx(\"h5\", {\n    className: \"product-price\"\n  }, data.discount ? formatCurrency(data.price - data.discount, locales, currency) : formatCurrency(data.price, locales, currency)), data.discount && __jsx(\"span\", null, formatCurrency(data.price, locales, currency))), !productStyle || productStyle === \"one\" ? __jsx(Tooltip, {\n    title: \"Add to cart\"\n  }, __jsx(Button, {\n    disabled: avaiableQuantity === 0,\n    className: \"product-atc\",\n    type: \"text\",\n    shape: \"circle\",\n    onClick: () => onAddToCart(data)\n  }, __jsx(\"i\", {\n    className: \"icon_bag_alt\"\n  }))) : null), productStyle === \"three\" ? __jsx(\"div\", {\n    className: \"product-button-group\"\n  }, __jsx(\"div\", {\n    className: \"product-button-group__wrapper\"\n  }, __jsx(Tooltip, {\n    placement: \"top\",\n    title: \"Quick view\"\n  }, __jsx(Button, {\n    onClick: showModal,\n    shape: \"circle\"\n  }, __jsx(\"i\", {\n    className: \"icon_search\"\n  }))), __jsx(Tooltip, {\n    placement: \"top\",\n    title: productInWishlist ? \"Remove from wishlist\" : \"Add to wishlist\"\n  }, __jsx(Button, {\n    shape: \"circle\",\n    className: `product-atw ${classNames({\n      active: productInWishlist\n    })}`,\n    onClick: () => onAddToWishlist(data)\n  }, __jsx(\"i\", {\n    className: \"icon_heart_alt\"\n  }))), __jsx(Tooltip, {\n    placement: \"top\",\n    title: \"Add to cart\"\n  }, __jsx(Button, {\n    disabled: avaiableQuantity === 0,\n    shape: \"circle\",\n    onClick: () => onAddToCart(data)\n  }, __jsx(\"i\", {\n    className: \"icon_bag_alt\"\n  }))))) : null)), __jsx(Modal, {\n    footer: null,\n    afterClose: handleCancel,\n    onCancel: handleCancel,\n    visible: visible,\n    width: 850\n  }, __jsx(ShopQuickView, {\n    setModalVisible: setVisible,\n    data: data\n  }))) : __jsx(Skeleton, {\n    active: true\n  });\n}\n\nexport default React.memo(Product);","map":null,"metadata":{},"sourceType":"module"}