{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { Modal, message } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { formatCurrency } from \"../../common/utils\";\nimport QuantitySelector from \"../controls/QuantitySelector\";\nimport { removeFromCart, decreaseQuantityCart, increaseQuantityCart } from \"../../redux/actions/cartActions\";\n\nfunction CartSidebarItem(_ref) {\n  var data = _ref.data;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(data.cartQuantity),\n      quantity = _useState2[0],\n      setQuantity = _useState2[1];\n\n  var globalState = useSelector(function (state) {\n    return state.globalReducer;\n  });\n  var _globalState$currency = globalState.currency,\n      currency = _globalState$currency.currency,\n      locales = _globalState$currency.locales;\n\n  var onRemoveProductFromCart = function onRemoveProductFromCart(e) {\n    e.preventDefault();\n    showModal();\n  };\n\n  var showModal = function showModal() {\n    setVisible(true);\n  };\n\n  var handleOk = function handleOk(e) {\n    dispatch(removeFromCart(data.cartId));\n    setVisible(false);\n    return message.error(\"Product removed from cart\");\n  };\n\n  var handleCancel = function handleCancel(e) {\n    setVisible(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"cart-sidebar-item\"\n  }, __jsx(\"div\", {\n    className: \"cart-sidebar-item__image\"\n  }, __jsx(\"img\", {\n    src: data.thumbImage[0],\n    alt: \"Product image\"\n  })), __jsx(\"div\", {\n    className: \"cart-sidebar-item__content\"\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + \"/product/[slug]\",\n    as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n  }, __jsx(\"a\", null, data.name)), __jsx(\"h5\", null, data.discount ? formatCurrency((data.price - data.discount) * data.cartQuantity, locales, currency) : formatCurrency(data.price * data.cartQuantity, locales, currency)), __jsx(QuantitySelector, {\n    size: \"small\",\n    defaultValue: data.cartQuantity,\n    min: 1,\n    max: data.quantity,\n    onDecrease: function onDecrease() {\n      return dispatch(decreaseQuantityCart(data.cartId));\n    },\n    onIncrease: function onIncrease() {\n      return dispatch(increaseQuantityCart(data.cartId));\n    }\n  })), __jsx(\"div\", {\n    className: \"cart-sidebar-item__close\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: onRemoveProductFromCart\n  }, __jsx(\"i\", {\n    className: \"icon_close\"\n  })))), __jsx(Modal, {\n    title: \"Cofirm this action\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel\n  }, __jsx(\"p\", null, \"Are your sure to remove product from cart ?\")));\n}\n\nexport default React.memo(CartSidebarItem);","map":null,"metadata":{},"sourceType":"module"}