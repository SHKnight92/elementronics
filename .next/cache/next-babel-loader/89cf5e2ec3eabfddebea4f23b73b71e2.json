{"ast":null,"code":"//Products\nexport var getProductsByCategory = function getProductsByCategory(arr, category) {\n  return category ? arr.filter(function (item) {\n    return item.category.toLowerCase() === category.toLowerCase();\n  }) : arr;\n};\nexport var getProductsBySlug = function getProductsBySlug(arr, slug) {\n  return slug && typeof slug === \"string\" ? arr.find(function (p) {\n    return p.slug.toLowerCase() === slug.toLowerCase();\n  }) : arr;\n};\nexport var getAllValuesOfKey = function getAllValuesOfKey(arr, key) {\n  if (key && typeof key === \"string\") {\n    var subCategory = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      if (!subCategory.includes(arr[i][key])) {\n        subCategory.push(arr[i][key]);\n      }\n    }\n\n    return subCategory.length > 0 ? subCategory : null;\n  } else {\n    return null;\n  }\n};\nexport var getAllSubCategories = function getAllSubCategories(arr, category) {\n  if (category && typeof category === \"string\") {\n    var products = getProducts(arr, category);\n    var subCategoriesArr = getAllValuesOfKey(products, \"subCategory\");\n    return subCategoriesArr !== null ? subCategoriesArr : null;\n  } else {\n    return null;\n  }\n};\nexport var getProductsBySort = function getProductsBySort(products, type) {\n  function sortWithCondition(arr, value) {\n    var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var num = reverse ? -1 : 1;\n    return arr.sort(function (a, b) {\n      if (a[value] < b[value]) {\n        return -1 * num;\n      }\n\n      if (a[value] > b[value]) {\n        return 1 * num;\n      }\n\n      return 0;\n    });\n  }\n\n  if (type === \"az\") {\n    return sortWithCondition(products, \"name\");\n  } else if (type === \"za\") {\n    return sortWithCondition(products, \"name\", true);\n  } else if (type === \"lowHigh\") {\n    return sortWithCondition(products, \"price\");\n  } else if (type === \"highLow\") {\n    return sortWithCondition(products, \"price\", true);\n  } else {\n    return products;\n  }\n};\nexport var getProductsByFilter = function getProductsByFilter(products, sortType, subCategory) {\n  var filteredProduct = subCategory ? products.filter(function (product) {\n    return product.subCategory.toLowerCase() === subCategory.toLowerCase();\n  }) : products;\n  return getProductsBySort(filteredProduct, sortType);\n};\nexport var getProductsBySearch = function getProductsBySearch(products, keyword) {\n  return keyword && keyword !== \"\" ? products.filter(function (product) {\n    return product.name.toLowerCase().includes(keyword.toLowerCase());\n  }) : products;\n}; //Cart\n\nexport var getTotalProductInCart = function getTotalProductInCart(arr) {\n  return arr ? arr.reduce(function (total, item) {\n    return total + item.cartQuantity;\n  }, 0) : 0;\n};\nexport var calculateTotalPrice = function calculateTotalPrice(arr) {\n  var total = 0;\n  arr.forEach(function (item) {\n    if (item.discount) {\n      total += item.cartQuantity ? (item.price - item.discount) * item.cartQuantity : item.price - item.discount;\n    } else {\n      total += item.cartQuantity ? item.price * item.cartQuantity : item.price;\n    }\n  });\n  return total;\n};\nexport var checkProductInCart = function checkProductInCart(cartArr, pid) {\n  return pid ? cartArr.find(function (item) {\n    return item.id === pid;\n  }) : null;\n};\nexport var checkAvaiableQuantityToAdd = function checkAvaiableQuantityToAdd(arr, product) {\n  var productsInCart = arr.filter(function (item) {\n    return item.id === product.id;\n  });\n\n  if (productsInCart && productsInCart.length > 0) {\n    var totalProductQuantityInCart = productsInCart.length > 0 && productsInCart.reduce(function (total, item) {\n      return total + item.cartQuantity;\n    }, 0);\n    var avaiable = product.quantity - totalProductQuantityInCart;\n    return avaiable < 1 ? 0 : avaiable;\n  } else {\n    product.quantity;\n  }\n}; //Wishlist\n\nexport var checkProductInWishlist = function checkProductInWishlist(wishlistArr, pid) {\n  return pid ? wishlistArr.find(function (item) {\n    return item.id === pid;\n  }) : null;\n};","map":null,"metadata":{},"sourceType":"module"}