{"ast":null,"code":"rsc; // import { Row, Col, Empty, Pagination } from \"antd\";\n// import { useSelector } from \"react-redux\";\n// import classNames from \"classnames\";\n// import Product from \"../product/Product\";\n// import {\n//   getProductsByFilter,\n//   getProductsBySearch,\n// } from \"../../common/shopUtils\";\n// import { useState, useEffect } from \"react\";\n// function ShopContentProduct({\n//   productResponsive,\n//   fiveColumn,\n//   data,\n//   productPerPage,\n//   productStyle,\n// }) {\n//   const shopState = useSelector((state) => state.shopReducer);\n//   const globalState = useSelector((state) => state.globalReducer);\n//   const [currentData, setCurrentData] = useState();\n//   const [page, setPage] = useState(1);\n//   const [offset, setOffset] = useState(0);\n//   useEffect(() => {\n//     let filteredProduct = getProductsByFilter(\n//       [...data],\n//       shopState.sort,\n//       shopState.subCategory\n//     );\n//     setCurrentData(filteredProduct);\n//     setOffset(0);\n//   }, [shopState, data]);\n//   useEffect(() => {\n//     setPage(1);\n//   }, [globalState]);\n//   const itemRender = (current, type, originalElement) => {\n//     if (type === \"prev\") {\n//       return (\n//         <a>\n//           <i className=\"fal fa-angle-left\" />\n//         </a>\n//       );\n//     }\n//     if (type === \"next\") {\n//       return (\n//         <a>\n//           <i className=\"fal fa-angle-right\" />\n//         </a>\n//       );\n//     }\n//     return originalElement;\n//   };\n//   const onChangeOffset = (page, pageSize) => {\n//     let offset = (page - 1) * pageSize;\n//     setPage(page);\n//     setOffset(offset);\n//   };\n//   return (\n//     <div className=\"shop-content__product\">\n//       {!currentData ? (\n//         <Empty description=\"No products in this category\" />\n//       ) : (\n//         <>\n//           {currentData.length > 0 ? (\n//             <>\n//               <Row gutter={[{ xs: 5, sm: 5, xl: 15, xxl: 30 }, 30]}>\n//                 {currentData\n//                   .slice(offset, offset + productPerPage)\n//                   .map((product, index) => (\n//                     <Col\n//                       key={index}\n//                       className={classNames({ \"five-col\": fiveColumn })}\n//                       {...productResponsive}\n//                     >\n//                       <Product data={product} productStyle={productStyle} />\n//                     </Col>\n//                   ))}\n//               </Row>\n//               {currentData.length >= productPerPage && (\n//                 <Pagination\n//                   classNames=\"shop-content__product-pagination\"\n//                   defaultCurrent={1}\n//                   current={page}\n//                   total={currentData.length}\n//                   pageSize={productPerPage}\n//                   itemRender={itemRender}\n//                   onChange={(page, pageSize) => onChangeOffset(page, pageSize)}\n//                 />\n//               )}\n//             </>\n//           ) : (\n//             <Empty />\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// export default React.memo(ShopContentProduct);","map":{"version":3,"sources":["E:/stora-next/Elementronics/src/components/shop/ShopContentProduct.js"],"names":["rsc"],"mappings":"AACAA,GAAG,C,CAiCH;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\r\nrsc\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Row, Col, Empty, Pagination } from \"antd\";\r\n// import { useSelector } from \"react-redux\";\r\n// import classNames from \"classnames\";\r\n\r\n// import Product from \"../product/Product\";\r\n// import {\r\n//   getProductsByFilter,\r\n//   getProductsBySearch,\r\n// } from \"../../common/shopUtils\";\r\n// import { useState, useEffect } from \"react\";\r\n\r\n// function ShopContentProduct({\r\n//   productResponsive,\r\n//   fiveColumn,\r\n//   data,\r\n//   productPerPage,\r\n//   productStyle,\r\n// }) {\r\n//   const shopState = useSelector((state) => state.shopReducer);\r\n//   const globalState = useSelector((state) => state.globalReducer);\r\n//   const [currentData, setCurrentData] = useState();\r\n//   const [page, setPage] = useState(1);\r\n//   const [offset, setOffset] = useState(0);\r\n//   useEffect(() => {\r\n//     let filteredProduct = getProductsByFilter(\r\n//       [...data],\r\n//       shopState.sort,\r\n//       shopState.subCategory\r\n//     );\r\n//     setCurrentData(filteredProduct);\r\n//     setOffset(0);\r\n//   }, [shopState, data]);\r\n//   useEffect(() => {\r\n//     setPage(1);\r\n//   }, [globalState]);\r\n\r\n//   const itemRender = (current, type, originalElement) => {\r\n//     if (type === \"prev\") {\r\n//       return (\r\n//         <a>\r\n//           <i className=\"fal fa-angle-left\" />\r\n//         </a>\r\n//       );\r\n//     }\r\n//     if (type === \"next\") {\r\n//       return (\r\n//         <a>\r\n//           <i className=\"fal fa-angle-right\" />\r\n//         </a>\r\n//       );\r\n//     }\r\n//     return originalElement;\r\n//   };\r\n  \r\n//   const onChangeOffset = (page, pageSize) => {\r\n//     let offset = (page - 1) * pageSize;\r\n//     setPage(page);\r\n//     setOffset(offset);\r\n//   };\r\n//   return (\r\n//     <div className=\"shop-content__product\">\r\n//       {!currentData ? (\r\n//         <Empty description=\"No products in this category\" />\r\n//       ) : (\r\n//         <>\r\n//           {currentData.length > 0 ? (\r\n//             <>\r\n//               <Row gutter={[{ xs: 5, sm: 5, xl: 15, xxl: 30 }, 30]}>\r\n//                 {currentData\r\n//                   .slice(offset, offset + productPerPage)\r\n//                   .map((product, index) => (\r\n//                     <Col\r\n//                       key={index}\r\n//                       className={classNames({ \"five-col\": fiveColumn })}\r\n//                       {...productResponsive}\r\n//                     >\r\n//                       <Product data={product} productStyle={productStyle} />\r\n//                     </Col>\r\n//                   ))}\r\n//               </Row>\r\n//               {currentData.length >= productPerPage && (\r\n//                 <Pagination\r\n//                   classNames=\"shop-content__product-pagination\"\r\n//                   defaultCurrent={1}\r\n//                   current={page}\r\n//                   total={currentData.length}\r\n//                   pageSize={productPerPage}\r\n//                   itemRender={itemRender}\r\n//                   onChange={(page, pageSize) => onChangeOffset(page, pageSize)}\r\n//                 />\r\n//               )}\r\n//             </>\r\n//           ) : (\r\n//             <Empty />\r\n//           )}\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default React.memo(ShopContentProduct);\r\n"]},"metadata":{},"sourceType":"script"}