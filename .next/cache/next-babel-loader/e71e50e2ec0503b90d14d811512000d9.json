{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Collapse } from \"antd\";\nimport { useState, useCallback } from \"react\";\nimport Slider from \"react-slick\";\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport Link from \"next/link\";\nimport { formatCurrency } from \"../../common/utils\";\nimport { calculateTotalPrice } from \"../../common/shopUtils\";\nimport LayoutOne from \"../../components/layouts/LayoutOne\";\nimport Container from \"../../components/other/Container\";\nimport productData from \"../../data/product.json\";\nimport Product from \"../../components/product/Product\";\nconst paymentData = [{\n  name: \"Direct Bank Transfer\",\n  content: \"With so many different ways today to find information online, it can sometimes be hard to know where to go to first.\"\n}, {\n  name: \"Cheque Payment\",\n  content: \"With so many different ways today to find information online, it can sometimes be hard to know where to go to first.\"\n}, {\n  name: \"PayPal\",\n  content: \"With so many different ways today to find information online, it can sometimes be hard to know where to go to first.\"\n}];\nexport default function checkout() {\n  const {\n    Option\n  } = Select;\n  const {\n    Panel\n  } = Collapse;\n  const router = useRouter();\n  const cartState = useSelector(state => state.cartReducer);\n  const globalState = useSelector(state => state.globalReducer);\n  const {\n    currency,\n    locales\n  } = globalState.currency;\n  const {\n    0: paymentMethod,\n    1: setPaymentMethod\n  } = useState(\"Direct Bank Transfer\");\n  const settings = {\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    autoplay: true,\n    autoplaySpeed: 2000,\n    responsive: [{\n      breakpoint: 920,\n      settings: {\n        slidesToShow: 4\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 3\n      }\n    }, {\n      breakpoint: 576,\n      settings: {\n        slidesToShow: 2\n      }\n    }]\n  };\n\n  const onFinish = values => {\n    router.push(\"/shop/checkout-complete\");\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const onChoosePayment = useCallback(key => {\n    setPaymentMethod(key);\n  }, [paymentMethod]);\n  return __jsx(LayoutOne, {\n    title: \"Checkout\"\n  }, __jsx(\"div\", {\n    className: \"checkout\"\n  }, __jsx(\"div\", {\n    className: \"checkout-top\"\n  }, __jsx(Container, null, __jsx(Row, {\n    gutter: {\n      xs: 0,\n      lg: 70\n    }\n  }, __jsx(Col, {\n    span: 24,\n    lg: 15,\n    xl: 17\n  }, __jsx(\"h3\", {\n    className: \"checkout-title\"\n  }, \"Billing details\"), __jsx(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    id: \"checkout-form\",\n    layout: \"vertical\",\n    className: \"checkout-form\"\n  }, __jsx(Row, {\n    gutter: {\n      xs: 10,\n      sm: 15,\n      md: 30,\n      lg: 70\n    }\n  }, __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"First name\",\n    name: \"firstname\",\n    rules: [{\n      required: true,\n      message: \"Please input your first name!\"\n    }]\n  }, __jsx(Input, null))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Last name\",\n    name: \"lastname\",\n    rules: [{\n      required: true,\n      message: \"Please input your last name!\"\n    }]\n  }, __jsx(Input, null))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Provine\",\n    name: \"provine\",\n    rules: [{\n      required: true,\n      message: \"Please input your provine!\"\n    }]\n  }, __jsx(Select, null, __jsx(Option, {\n    value: \"male\"\n  }, \"male\"), __jsx(Option, {\n    value: \"female\"\n  }, \"female\"), __jsx(Option, {\n    value: \"other\"\n  }, \"other\")))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"City\",\n    name: \"city\",\n    rules: [{\n      required: true,\n      message: \"Please input your city!\"\n    }]\n  }, __jsx(Select, null, __jsx(Option, {\n    value: \"male\"\n  }, \"male\"), __jsx(Option, {\n    value: \"female\"\n  }, \"female\"), __jsx(Option, {\n    value: \"other\"\n  }, \"other\")))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Address\",\n    name: \"address\",\n    rules: [{\n      required: true,\n      message: \"Please input your address!\"\n    }]\n  }, __jsx(Input, null))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Address 2\",\n    name: \"address2\"\n  }, __jsx(Input, null))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Country/States\",\n    name: \"country\",\n    rules: [{\n      required: true,\n      message: \"Please input your country !\"\n    }]\n  }, __jsx(Select, null, __jsx(Option, {\n    value: \"male\"\n  }, \"male\"), __jsx(Option, {\n    value: \"female\"\n  }, \"female\"), __jsx(Option, {\n    value: \"other\"\n  }, \"other\")))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Postcode/Zip\",\n    name: \"zip\"\n  }, __jsx(Input, null))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Email\",\n    name: \"email\"\n  }, __jsx(Input, null))), __jsx(Col, {\n    span: 24,\n    md: 12\n  }, __jsx(Form.Item, {\n    label: \"Phone number\",\n    name: \"phone\",\n    rules: [{\n      required: true,\n      message: \"Please input your phone number !\"\n    }]\n  }, __jsx(Input, null))), __jsx(Col, {\n    span: 24\n  }, __jsx(Form.Item, {\n    name: \"news-subcribe\",\n    valuePropName: \"checked\"\n  }, __jsx(Checkbox, null, \"I want to receive exclusive discounts and information on the latest Stora trends.\")))))), __jsx(Col, {\n    span: 24,\n    md: 16,\n    lg: 9,\n    xl: 7\n  }, __jsx(\"div\", {\n    className: \"checkout-total\"\n  }, __jsx(\"h3\", {\n    className: \"checkout-title\"\n  }, \"Your Order\"), __jsx(\"div\", {\n    className: \"checkout-total__table\"\n  }, __jsx(\"div\", {\n    className: \"divider\"\n  }), __jsx(\"table\", {\n    className: \"checkout-total__table-calculate\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Products\"), __jsx(\"th\", null, \"Subtoal\"))), __jsx(\"tbody\", null, cartState.map((item, index) => __jsx(\"tr\", {\n    key: index\n  }, __jsx(\"td\", null, item.name, __jsx(\"span\", null, \" x \", item.cartQuantity)), __jsx(\"td\", null, item.discount ? formatCurrency(item.price - item.discount, locales, currency) : formatCurrency(item.price, locales, currency)))))), __jsx(\"div\", {\n    className: \"divider\"\n  }), __jsx(\"table\", {\n    className: \"checkout-total__table-subtotal\"\n  }, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, \"Subtotal\"), __jsx(\"td\", null, formatCurrency(calculateTotalPrice(cartState), locales, currency))))), __jsx(\"div\", {\n    className: \"divider\"\n  }), __jsx(\"table\", {\n    className: \"checkout-total__table-shiping\"\n  }, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, __jsx(\"h5\", null, \"Shiping\"), __jsx(\"p\", null, \"Shiping to United State\")), __jsx(\"td\", null, \"Free\")))), __jsx(\"table\", {\n    className: \"checkout-total__table-total\"\n  }, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, \"Total\"), __jsx(\"td\", null, formatCurrency(calculateTotalPrice(cartState), locales, currency))))), __jsx(Collapse, {\n    className: \"checkout-payment\",\n    accordion: true,\n    defaultActiveKey: paymentMethod,\n    ghost: true,\n    onChange: onChoosePayment\n  }, paymentData.map((item, index) => __jsx(Panel, {\n    showArrow: false,\n    header: item.name,\n    key: item.name,\n    onClick: () => setPaymentMethod(item.name),\n    extra: __jsx(\"i\", {\n      className: paymentMethod === item.name ? \"fas fa-check-square\" : \"fal fa-square\"\n    })\n  }, __jsx(\"p\", null, item.content)))))))))), __jsx(\"div\", {\n    className: \"checkout-bottom\"\n  }, __jsx(Container, null, __jsx(\"h5\", null, \"Discount When Purchased Together\"), __jsx(\"div\", {\n    className: \"checkout-related-products\"\n  }, __jsx(Slider, settings, productData.slice(0, 8).map((item, index) => __jsx(\"div\", {\n    className: \"slider-item\",\n    key: index\n  }, __jsx(Product, {\n    data: item\n  }))))))), __jsx(\"div\", {\n    className: \"checkout-sticky\"\n  }, __jsx(Container, null, __jsx(\"div\", {\n    className: \"checkout-functions\"\n  }, __jsx(Button, {\n    className: \"checkout-functions--shopping\"\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + \"/\"\n  }, __jsx(\"a\", null, \"Continue Shopping\"))), __jsx(\"div\", {\n    className: \"checkout-price-finally\"\n  }, __jsx(\"table\", null, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, cartState.length, \" items\"), __jsx(\"td\", null, formatCurrency(calculateTotalPrice(cartState), locales, currency))), __jsx(\"tr\", null, __jsx(\"td\", null, \"Total:\"), __jsx(\"td\", null, formatCurrency(calculateTotalPrice(cartState), locales, currency)))))), __jsx(Button, {\n    className: \"checkout-functions--next\",\n    form: \"checkout-form\",\n    key: \"submit\",\n    htmlType: \"submit\",\n    style: {\n      marginBottom: 0\n    }\n  }, \"Next Step\"))))));\n}","map":null,"metadata":{},"sourceType":"module"}