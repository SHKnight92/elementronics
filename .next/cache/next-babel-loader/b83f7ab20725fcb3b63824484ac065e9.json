{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { Rate, Button, Tooltip, Skeleton, message, Modal, Spin } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { formatCurrency } from \"../../common/utils\";\nimport { checkProductInWishlist, checkAvaiableQuantityToAdd } from \"../../common/shopUtils\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist, removeFromWishlist } from \"../../redux/actions/wishlistActions\";\nimport ShopQuickView from \"../shop/ShopQuickView\";\n\nfunction Product(_ref) {\n  var data = _ref.data,\n      productStyle = _ref.productStyle;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(true),\n      imageLoading = _useState2[0],\n      setImageLoading = _useState2[1];\n\n  var globalState = useSelector(function (state) {\n    return state.globalReducer;\n  });\n  var cartState = useSelector(function (state) {\n    return state.cartReducer;\n  });\n  var wishlistState = useSelector(function (state) {\n    return state.wishlistReducer;\n  });\n  var productInWishlist = checkProductInWishlist(wishlistState, data.id);\n  var avaiableQuantity = checkAvaiableQuantityToAdd(cartState, data);\n  var _globalState$currency = globalState.currency,\n      currency = _globalState$currency.currency,\n      locales = _globalState$currency.locales;\n  useEffect(function () {\n    setImageLoading(true);\n  }, [globalState.category]);\n\n  var renderProductType = function renderProductType() {\n    if (data.discount && !data.isNew) {\n      return __jsx(\"p\", {\n        className: \"product-type -sale\"\n      }, \"Sale\");\n    } else if (data.isNew && !data.discount) {\n      return __jsx(\"p\", {\n        className: \"product-type -new\"\n      }, \"New\");\n    } else if (data.isNew && data.discount) {\n      return __jsx(\"p\", {\n        className: \"product-type -new\"\n      }, \"New\");\n    } else {\n      return null;\n    }\n  };\n\n  console.log(avaiableQuantity);\n\n  var onAddToCart = function onAddToCart(data) {\n    if (avaiableQuantity === 0) {\n      return;\n    }\n\n    dispatch(addToCart(data, 1, \"none\", \"none\"));\n    message.success(\"Product added to cart successfully\");\n  };\n\n  var onAddToWishlist = function onAddToWishlist(data) {\n    if (productInWishlist) {\n      dispatch(removeFromWishlist(data.id));\n      return message.error(\"Product removed from wishlist\");\n    } else {\n      dispatch(addToWishlist(data));\n      return message.success(\"Product added to wishlist successfully\");\n    }\n  };\n\n  var renderStyleClass = function renderStyleClass() {\n    var avaialeStyles = [\"one\", \"two\", \"three\"];\n\n    if (avaialeStyles.includes(productStyle)) {\n      if (!productStyle || productStyle === \"one\") {\n        return \"-style-one\";\n      } else {\n        return \"-style-\" + productStyle;\n      }\n    } else {\n      return \"-style-one\";\n    }\n  };\n\n  var showModal = function showModal() {\n    setVisible(true);\n  };\n\n  var handleCancel = function handleCancel(e) {\n    setVisible(false);\n  };\n\n  var handleImageLoaded = function handleImageLoaded() {\n    setImageLoading(false);\n  };\n\n  return data ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"product \".concat(renderStyleClass())\n  }, __jsx(\"div\", {\n    className: \"product-image\"\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + \"/product/[slug]\",\n    as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n  }, __jsx(\"a\", {\n    className: classNames({\n      loading: imageLoading\n    })\n  }, data.thumbImage && data.thumbImage.map(function (item, index) {\n    return __jsx(\"img\", {\n      onLoad: handleImageLoaded,\n      key: index,\n      src: item,\n      alt: \"Product image\"\n    });\n  }))), imageLoading && __jsx(\"div\", {\n    className: \"product-image-loading\"\n  }, __jsx(Spin, {\n    size: \"large\"\n  })), renderProductType(), productStyle === \"two\" ? __jsx(\"div\", {\n    className: \"product-button-group\"\n  }, __jsx(Tooltip, {\n    title: \"Quick view\"\n  }, __jsx(Button, {\n    onClick: showModal,\n    type: \"text\"\n  }, __jsx(\"i\", {\n    className: \"icon_search\"\n  }))), __jsx(Tooltip, {\n    title: productInWishlist ? \"Remove from wishlist\" : \"Add to wishlist\"\n  }, __jsx(Button, {\n    className: \"product-atw \".concat(classNames({\n      active: productInWishlist\n    })),\n    type: \"text\",\n    onClick: function onClick() {\n      return onAddToWishlist(data);\n    }\n  }, __jsx(\"i\", {\n    className: \"icon_heart_alt\"\n  }))), __jsx(Tooltip, {\n    title: \"Add to cart\"\n  }, __jsx(Button, {\n    disabled: avaiableQuantity === 0,\n    type: \"text\",\n    onClick: function onClick() {\n      return onAddToCart(data);\n    }\n  }, __jsx(\"i\", {\n    className: \"icon_bag_alt\"\n  })))) : null, !productStyle || productStyle === \"one\" ? __jsx(React.Fragment, null, __jsx(Tooltip, {\n    placement: \"left\",\n    title: productInWishlist ? \"Remove from wishlist\" : \"Add to wishlist\"\n  }, __jsx(Button, {\n    className: \"product-atw \".concat(classNames({\n      active: productInWishlist\n    })),\n    type: \"text\",\n    shape: \"circle\",\n    onClick: function onClick() {\n      return onAddToWishlist(data);\n    }\n  }, __jsx(\"i\", {\n    className: \"icon_heart_alt\"\n  }))), __jsx(Button, {\n    onClick: showModal,\n    className: \"product-qv\"\n  }, \"Quick view\")) : null), __jsx(\"div\", {\n    className: \"product-content\"\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + \"/product/[slug]\",\n    as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n  }, __jsx(\"a\", {\n    className: \"product-name\"\n  }, data.name)), __jsx(\"div\", {\n    className: \"product-rate\"\n  }, __jsx(Rate, {\n    defaultValue: data.rate,\n    disabled: true\n  }), __jsx(\"span\", {\n    className: \"product-rate-quantity\"\n  }, \"(06)\")), __jsx(\"div\", {\n    className: \"product-content__footer\"\n  }, __jsx(\"div\", {\n    className: \"product-content__footer-price\"\n  }, __jsx(\"h5\", {\n    className: \"product-price\"\n  }, data.discount ? formatCurrency(data.price - data.discount, locales, currency) : formatCurrency(data.price, locales, currency)), data.discount && __jsx(\"span\", null, formatCurrency(data.price, locales, currency))), !productStyle || productStyle === \"one\" ? __jsx(Tooltip, {\n    title: \"Add to cart\"\n  }, __jsx(Button, {\n    disabled: avaiableQuantity === 0,\n    className: \"product-atc\",\n    type: \"text\",\n    shape: \"circle\",\n    onClick: function onClick() {\n      return onAddToCart(data);\n    }\n  }, __jsx(\"i\", {\n    className: \"icon_bag_alt\"\n  }))) : null), productStyle === \"three\" ? __jsx(\"div\", {\n    className: \"product-button-group\"\n  }, __jsx(\"div\", {\n    className: \"product-button-group__wrapper\"\n  }, __jsx(Tooltip, {\n    placement: \"top\",\n    title: \"Quick view\"\n  }, __jsx(Button, {\n    onClick: showModal,\n    shape: \"circle\"\n  }, __jsx(\"i\", {\n    className: \"icon_search\"\n  }))), __jsx(Tooltip, {\n    placement: \"top\",\n    title: productInWishlist ? \"Remove from wishlist\" : \"Add to wishlist\"\n  }, __jsx(Button, {\n    shape: \"circle\",\n    className: \"product-atw \".concat(classNames({\n      active: productInWishlist\n    })),\n    onClick: function onClick() {\n      return onAddToWishlist(data);\n    }\n  }, __jsx(\"i\", {\n    className: \"icon_heart_alt\"\n  }))), __jsx(Tooltip, {\n    placement: \"top\",\n    title: \"Add to cart\"\n  }, __jsx(Button, {\n    disabled: avaiableQuantity === 0,\n    shape: \"circle\",\n    onClick: function onClick() {\n      return onAddToCart(data);\n    }\n  }, __jsx(\"i\", {\n    className: \"icon_bag_alt\"\n  }))))) : null)), __jsx(Modal, {\n    footer: null,\n    afterClose: handleCancel,\n    onCancel: handleCancel,\n    visible: visible,\n    width: 850\n  }, __jsx(ShopQuickView, {\n    setModalVisible: setVisible,\n    data: data\n  }))) : __jsx(Skeleton, {\n    active: true\n  });\n}\n\nexport default React.memo(Product);","map":null,"metadata":{},"sourceType":"module"}