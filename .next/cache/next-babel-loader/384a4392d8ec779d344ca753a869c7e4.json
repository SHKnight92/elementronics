{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Empty, Pagination } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport Product from \"../product/Product\";\nimport { getProductsByFilter, getProductsBySearch } from \"../../common/shopUtils\";\nimport { useState, useEffect } from \"react\";\n\nfunction ShopContentProduct(_ref) {\n  var productResponsive = _ref.productResponsive,\n      fiveColumn = _ref.fiveColumn,\n      data = _ref.data,\n      productPerPage = _ref.productPerPage,\n      productStyle = _ref.productStyle;\n  var shopState = useSelector(function (state) {\n    return state.shopReducer;\n  });\n  var globalState = useSelector(function (state) {\n    return state.globalReducer;\n  });\n\n  var _useState = useState(),\n      currentData = _useState[0],\n      setCurrentData = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(0),\n      offset = _useState3[0],\n      setOffset = _useState3[1];\n\n  useEffect(function () {\n    var filteredProduct = getProductsByFilter(_toConsumableArray(data), shopState.sort, shopState.subCategory);\n    setCurrentData(filteredProduct);\n    setOffset(0);\n  }, [shopState, data]);\n  useEffect(function () {\n    setPage(1);\n  }, [globalState]);\n\n  var itemRender = function itemRender(current, type, originalElement) {\n    if (type === \"prev\") {\n      return __jsx(\"a\", null, __jsx(\"i\", {\n        className: \"fal fa-angle-left\"\n      }));\n    }\n\n    if (type === \"next\") {\n      return __jsx(\"a\", null, __jsx(\"i\", {\n        className: \"fal fa-angle-right\"\n      }));\n    }\n\n    return originalElement;\n  };\n\n  var onChangeOffset = function onChangeOffset(page, pageSize) {\n    var offset = (page - 1) * pageSize;\n    setPage(page);\n    setOffset(offset);\n  };\n\n  return __jsx(\"div\", {\n    className: \"shop-content__product\"\n  }, !currentData ? __jsx(Empty, {\n    description: \"No products in this category\"\n  }) : __jsx(React.Fragment, null, currentData.length > 0 ? __jsx(React.Fragment, null, __jsx(Row, {\n    gutter: [{\n      xs: 5,\n      sm: 5,\n      xl: 15,\n      xxl: 30\n    }, 30]\n  }, currentData.slice(offset, offset + productPerPage).map(function (product, index) {\n    return __jsx(Col, _extends({\n      key: index,\n      className: classNames({\n        \"five-col\": fiveColumn\n      })\n    }, productResponsive), __jsx(Product, {\n      data: product,\n      productStyle: productStyle\n    }));\n  })), currentData.length >= productPerPage && __jsx(Pagination, {\n    classNames: \"shop-content__product-pagination\",\n    defaultCurrent: 1,\n    current: page,\n    total: currentData.length,\n    pageSize: productPerPage,\n    itemRender: itemRender,\n    onChange: function onChange(page, pageSize) {\n      return onChangeOffset(page, pageSize);\n    }\n  })) : __jsx(Empty, null)));\n}\n\nexport default React.memo(ShopContentProduct);","map":null,"metadata":{},"sourceType":"module"}