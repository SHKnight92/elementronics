{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Row, Col, Empty, Pagination } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport Product from \"../product/Product\";\nimport { getProductsByFilter, getProductsBySearch } from \"../../common/shopUtils\";\nimport { useState, useEffect } from \"react\";\n\nfunction ShopContentProduct({\n  productResponsive,\n  fiveColumn,\n  data,\n  productPerPage,\n  productStyle\n}) {\n  const shopState = useSelector(state => state.shopReducer);\n  const globalState = useSelector(state => state.globalReducer);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState();\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  useEffect(() => {\n    let filteredProduct = getProductsByFilter([...data], shopState.sort, shopState.subCategory);\n    setCurrentData(filteredProduct);\n    setOffset(0);\n  }, [shopState, data]);\n  useEffect(() => {\n    setPage(1);\n  }, [globalState]);\n\n  const itemRender = (current, type, originalElement) => {\n    if (type === \"prev\") {\n      return __jsx(\"a\", null, __jsx(\"i\", {\n        className: \"fal fa-angle-left\"\n      }));\n    }\n\n    if (type === \"next\") {\n      return __jsx(\"a\", null, __jsx(\"i\", {\n        className: \"fal fa-angle-right\"\n      }));\n    }\n\n    return originalElement;\n  };\n\n  const onChangeOffset = (page, pageSize) => {\n    let offset = (page - 1) * pageSize;\n    setPage(page);\n    setOffset(offset);\n  };\n\n  return __jsx(\"div\", {\n    className: \"shop-content__product\"\n  }, !currentData ? __jsx(Empty, {\n    description: \"No products in this category\"\n  }) : __jsx(React.Fragment, null, currentData.length > 0 ? __jsx(React.Fragment, null, __jsx(Row, {\n    gutter: [{\n      xs: 5,\n      sm: 5,\n      xl: 15,\n      xxl: 30\n    }, 30]\n  }, currentData.slice(offset, offset + productPerPage).map((product, index) => __jsx(Col, _extends({\n    key: index,\n    className: classNames({\n      \"five-col\": fiveColumn\n    })\n  }, productResponsive), __jsx(Product, {\n    data: product,\n    productStyle: productStyle\n  })))), currentData.length >= productPerPage && __jsx(Pagination, {\n    classNames: \"shop-content__product-pagination\",\n    defaultCurrent: 1,\n    current: page,\n    total: currentData.length,\n    pageSize: productPerPage,\n    itemRender: itemRender,\n    onChange: (page, pageSize) => onChangeOffset(page, pageSize)\n  })) : __jsx(Empty, null)));\n}\n\nexport default React.memo(ShopContentProduct);","map":null,"metadata":{},"sourceType":"module"}